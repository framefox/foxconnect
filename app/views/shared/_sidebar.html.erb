<% 
  # Define navigation items
  navigation = [
    {
      name: "Home",
      href: home_path,
      icon: "HomeIcon",
      icon_active: "HomeFilledIcon",
      current: request.path == home_path
    },
    {
      name: "Orders",
      href: orders_path, 
      icon: "OrderIcon",
      icon_active: "OrderFilledIcon",
      current: request.path.start_with?("/orders")
    },
    {
      name: "Stores",
      href: connections_root_path,
      icon: "StoreIcon", 
      icon_active: "StoreFilledIcon",
      current: request.path == connections_root_path || request.path.start_with?("/connections/stores")
    }
  ]

  connections_section = [
    
  ]

  settings_section = [
    {
      name: "Settings",
      href: "#",
      icon: "SettingsIcon",
      icon_active: "SettingsFilledIcon"
    }
  ]
%>
<!-- Mobile menu button -->
<div class="lg:hidden fixed top-4 left-4 z-50">
  <button
    id="mobile-menu-button"
    class="inline-flex items-center justify-center p-2 rounded-md text-slate-400 hover:text-slate-500 hover:bg-slate-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-slate-500"
  >
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path id="menu-open-icon" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
      <path id="menu-close-icon" class="hidden" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
    </svg>
  </button>
</div>
<!-- Mobile overlay -->
<div id="mobile-overlay" class="lg:hidden fixed inset-0 z-40 bg-slate-600 opacity-75 hidden"></div>
<!-- Sidebar -->
<div
  id="sidebar"
  class="fixed inset-y-0 left-0 z-50 w-64 bg-white border-r border-slate-200 transform transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0 lg:h-full -translate-x-full"
>
  <div class="flex flex-col h-screen lg:h-full">
    <!-- Header -->
    <div class="flex items-center justify-between p-6 border-b border-slate-200">
      <div class="flex items-center space-x-3">
        <span class="text-lg font-semibold text-slate-900">
          <%= image_tag "logo-connect-sm.png", alt: "Framefox Connect", class: "h-5 ml-2" %>
        </span>
      </div>
    </div>
    <!-- Main Navigation -->
    <nav class="flex-1 px-4 space-y-6 p-6">
      <div class="space-y-1">
        <% navigation.each do |item| %>
          <%= link_to(
            item[:disabled] ? "#" : item[:href],
            class: "group flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors #{
              item[:current] ? 
                'bg-slate-100 text-slate-900' : 
                item[:disabled] ? 
                  'text-slate-400 cursor-not-allowed' : 
                  'text-slate-600 hover:text-slate-900 hover:bg-slate-50'
            }",
            onclick: item[:disabled] ? "return false;" : nil
          ) do %>
            <span class="mr-3"><%= svg_icon(item[:current] ? item[:icon_active] : item[:icon], class: 'w-5 h-5') %></span>
            <%= item[:name] %>
          <% end %>
        <% end %>
      </div>
    </nav>
    <!-- User Section -->
    <div class="px-6 pb-4">
      <% if customer_signed_in? %>
        <div class="p-3 <%= impersonating? ? 'bg-yellow-50 border-2 border-yellow-300' : 'bg-slate-100' %> rounded-lg">
          <% if impersonating? %>
            <div class="mb-2 px-2 py-1 bg-yellow-200 rounded text-xs font-semibold text-yellow-800 text-center">
              IMPERSONATING
            </div>
          <% end %>
          <div class="flex items-center space-x-3">
            <div class="w-8 h-8 <%= impersonating? ? 'bg-yellow-200' : 'bg-slate-200' %> rounded-full flex items-center justify-center">
              <span class="text-xs font-semibold <%= impersonating? ? 'text-yellow-800' : 'text-slate-600' %>">
                <%= current_customer.first_name&.first || current_customer.email.first.upcase %>
              </span>
            </div>
            <div class="flex-1 min-w-0">
              <p class="text-sm font-medium text-slate-900 truncate">
                <%= current_customer.full_name %>
              </p>
              <p class="text-xs text-slate-500 truncate">
                <%= current_customer.email %>
              </p>
            </div>
          </div>
          <% if impersonating? %>
            <%= button_to stop_impersonating_admin_users_path, 
                method: :delete, 
                class: "mt-3 w-full text-center px-3 py-1.5 text-xs font-medium text-white bg-yellow-600 hover:bg-yellow-700 rounded-md transition-colors" do %>
              Stop Impersonating
            <% end %>
          <% else %>
            <%= button_to logout_path, 
                method: :delete, 
                class: "mt-3 w-full text-center px-3 py-1.5 text-xs font-medium bg-white text-slate-600 hover:text-slate-900 hover:bg-slate-200 rounded-md transition-colors" do %>
              Sign Out
            <% end %>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>
<script>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileOverlay = document.getElementById('mobile-overlay');
    const sidebar = document.getElementById('sidebar');
    const menuOpenIcon = document.getElementById('menu-open-icon');
    const menuCloseIcon = document.getElementById('menu-close-icon');

    let isMobileMenuOpen = false;

    function toggleMobileMenu() {
      isMobileMenuOpen = !isMobileMenuOpen;

      if (isMobileMenuOpen) {
        // Show mobile menu
        sidebar.classList.remove('-translate-x-full');
        sidebar.classList.add('translate-x-0');
        mobileOverlay.classList.remove('hidden');
        menuOpenIcon.classList.add('hidden');
        menuCloseIcon.classList.remove('hidden');
      } else {
        // Hide mobile menu
        sidebar.classList.remove('translate-x-0');
        sidebar.classList.add('-translate-x-full');
        mobileOverlay.classList.add('hidden');
        menuOpenIcon.classList.remove('hidden');
        menuCloseIcon.classList.add('hidden');
      }
    }

    function closeMobileMenu() {
      if (isMobileMenuOpen) {
        toggleMobileMenu();
      }
    }

    // Event listeners
    mobileMenuButton.addEventListener('click', toggleMobileMenu);
    mobileOverlay.addEventListener('click', closeMobileMenu);

    // Close mobile menu when window is resized to desktop
    window.addEventListener('resize', function() {
      if (window.innerWidth >= 1024) { // lg breakpoint
        closeMobileMenu();
      }
    });
  });
</script>
